name: SonarQube Analysis

on:
  push:
    branches:
      - develop

jobs:
  sonar-analysis:
    name: Analyze Code with SonarQube
    runs-on: self-hosted

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Set JAVA_HOME for Java 17
        run: echo "JAVA_HOME=$(dirname $(dirname $(readlink -f $(which java))))" >> $GITHUB_ENV

      - name: Add JAVA_HOME to PATH
        run: echo "PATH=$JAVA_HOME/bin:$PATH" >> $GITHUB_ENV

      - name: Verify Java Version
        run: java -version

      - name: Cache SonarQube Scanner
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarQube Scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
          unzip sonar-scanner-cli-4.8.0.2856-linux.zip
          rm -rf ~/.sonar-scanner
          mv sonar-scanner-4.8.0.2856-linux ~/.sonar-scanner
          echo "PATH=$HOME/.sonar-scanner/bin:$PATH" >> $GITHUB_ENV

      - name: Verify SonarScanner Java Version
        run: ~/.sonar-scanner/bin/sonar-scanner -v

      - name: Run SonarQube Analysis
        shell: bash
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          JAVA_HOME: $JAVA_HOME
          PATH: $JAVA_HOME/bin:$PATH
        run: |
          ~/.sonar-scanner/bin/sonar-scanner \
          -Dsonar.projectKey=Authentication \
          -Dsonar.sources=. \
          -Dsonar.host.url=$SONAR_HOST_URL \
          -Dsonar.login=$SONAR_TOKEN
